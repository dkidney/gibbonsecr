% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/gibbonsecr_1.0-functions_methods.r
\name{calc_bearings}
\alias{calc_bearings}
\alias{calc_bearings.default}
\alias{calc_bearings.traps}
\alias{calc_distances}
\alias{calc_distances.default}
\alias{calc_distances.traps}
\title{Calculate bearings or distances between two sets of points}
\usage{
calc_bearings(x, y, ...)

\method{calc_bearings}{default}(x, y, ...)

\method{calc_bearings}{traps}(x, y, ...)

calc_distances(x, y, ...)

\method{calc_distances}{default}(x, y, ...)

\method{calc_distances}{traps}(x, y, ...)
}
\arguments{
\item{x}{a matrix, data.frame or \code{\link{traps}} object}

\item{y}{a matrix, data.frame or \code{\link{mask}} object}

\item{...}{additional arguments (not used)}
}
\value{
A matrix, with columns representing points in \code{x} and rows
  representing points in \code{y}. \code{calc_bearings} returns a matrix of
  radians and \code{calc_distances} returns a matrix of distances in the same
  units as \code{x} and \code{y} (\code{x} and \code{y} must use the same
  units). In the case of \code{.traps} functions, if \code{x} or \code{y} are
  multi-session, then a list of matrices is returned with one element per
  session.
}
\description{
Calculate bearings or distances from points in \code{x} to
  points in \code{y}.
}
\details{
These functions are wrappers to non-exported functions written using
  \code{\link{Rcpp}}. (The underlying Rcpp functions, which take matrix
  inputs and have no error checks, can be accessed with
  \code{gibbonsecr:::calc_bearings_rcpp} and
  \code{gibbonsecr:::calc_distances_rcpp}.)

\code{.default}
\itemize{
  \item \code{x} and \code{y} must be two-column matrices or data.frames.
}
\code{.traps}
\itemize{
  \item \code{x} must be a \code{\link{traps}} object and \code{y} must be a
  \code{\link{mask}} object.
}
}
\examples{
## Example 1: from a single point to all points in a matrix
A = matrix(0,1,2)
Z = matrix(c(0,1,1,1,1,0), 3, 2)
plot(Z, pch = 19, col = 2, asp = 1)
points(A, pch = 19, col = 4)
calc_distances(A, Z)
calc_bearings(A, Z)

## Example 2: from a trap to all points in a mask
data(N.annamensis)
traps = secr::traps(N.annamensis)[[1]]
mask = secr::make.mask(traps, buffer = 3000, spacing = 100)

distances = calc_distances(traps, mask)
bearings = calc_bearings(traps, mask)

# plot results for trap 1
x = unique(mask$x)
y = unique(mask$y)

op = par(no.readonly = TRUE)
par(mfrow = c(1,2))

z = matrix(distances[,1], length(x), length(y))
image(x, y, z, col = heat.colors(100), asp = 1, main = "Distances")
points(traps, pch = 19)
points(traps[1,], pch = 19, col = 4)

z = matrix(bearings[,1], length(x), length(y))
image(x, y, z, col = heat.colors(100), asp = 1, main = "Distances")
points(traps, pch = 19)
points(traps[1,], pch = 19, col = 4)

par(op)
}
\author{
Darren Kidney \email{darrenkidney@googlemail.com}
}
\seealso{
\link{add_bearings}, \link{add_distances}, \link{get_bearings},
  \link{get_captures}, \link{get_distances}
}

